---
title: "Task 1: Hydrology, Climate, and Water Supply Data Inventory for Pilot Parks"
author: "Kathryn Willi, Caitlin Mothes"
format: html
editor: visual
---

*Text from the original SOW:*

Water, in adequate quantity and quality, is essential for National Park Service (NPS) operations, including providing water for visitors, park staff, firefighting activities, irrigation, stock watering, restoration efforts, and concessions. While it is believed many NPS water supplies are sensitive to climate change, few have been evaluated for climate vulnerability. Aging NPS water supply infrastructure, increasing NPS water demands, and added stresses on water supply sources from population growth and commercial development near parks are necessitating significant capital investments in NPS water supply systems; such investment decisions should consider climate change and be informed by science.

This project will evaluate the influence of climate change on the security of NPS water supplies, beginning with parks in hydrologic settings most likely to experience supply challenges. If a current or possible future water supply is found to be sensitive to climate change and projected to experience climate-related changes that will impair that supply's quantity and/or quality, adaptation actions can be undertaken to further secure that water supply (e.g., increase water conservation at the site, reduce existing losses in the transmission of water, increase water storage to help weather periods of drought, or consider less sensitive, alternate sources for water).

The overall goal of this project is to prepare NPS for addressing critical climate change-related water supply challenges through:

1.  Inventorying available data and information describing park climate, hydrology, and water supplies;

2.  Identifying data gaps;

3.  Selecting existing or developing new methods for evaluating water supply climate-sensitivity and exposure;

4.  Conducting climate change vulnerability assessments (CCVAs);

5.  Predicting future climate conditions and resulting changes to NPS water supplies; and lastly

6.  Developing recommendations for water supply-related adaptation strategies.

This report aims to update NPS on our progress related to Points 1 and 2, which encompass **Task 1 in our Statement of Work:**

1.  Compile available data and information describing the hydrology, climate, and water supplies of priority NPS-identified parks (e.g., DEVA, JOTR, and MOJA).

-   Examples: Hydrologic data may include stream and spring flow data, groundwater level data, and water quality data associated with specific sources of NPS water supplies or suitable analogs. This may also include information describing contributing basins (e.g., catchment areas, groundwater recharge areas, surface water/groundwater interaction, and output from water balance models). Climate data may include historical precipitation and temperature data and locations and monitored parameters of weather stations and SNOTEL sites. Water supply information may include types of supplies (i.e., surface water or groundwater), point-of-diversion locations, diversion amounts, NPS-observed supply challenges, etc.â€¯

# Approach

We have developed several self-contained (i.e., no local data inputs necessary) functions in R that pull relevant data sets for any selected CONTUS park unit(s) in the National Park System.

| Name                | Underlying Data                                                                                                                                                                                    | Data Type                | Function                                                                                                                                                 | Input(s)                                                                            |
|---------------|---------------|---------------|---------------|---------------|
| getParkBoundary()   | NPS-IRMA                                                                                                                                                                                           | Polygons                 | Download park boundary polygon(s).                                                                                                                       | Park unit code(s)                                                                   |
| downloadOmernik()   | EPA Omernik Ecoregions                                                                                                                                                                             | Polygons                 | Download Omernik III Ecoregions intersecting park boundaries.                                                                                            | Park boundaries, distance to go outside of park boundaries                          |
| downloadRecharge()  | Estimated mean annual natural ground-water recharge in the conterminous United States ([Wollock, 2003](https://water.usgs.gov/GIS/metadata/usgswrd/XML/rech48grd.xml#stdorder))                    | Raster                   | Clip groundwater recharge raster to park boundaries.                                                                                                     | Park boundaries, distance to go outside of park boundaries                          |
| downloadAquifers()  | Principal Aquifers of the 48 Conterminous United States, Hawaii, Puerto Rico, and the U.S. Virgin Islands ([USGS, 2003](https://water.usgs.gov/GIS/metadata/usgswrd/XML/aquifers_us.xml#stdorder)) | Polygons                 | Select aquifers within park boundaries.                                                                                                                  | Park boundaries, distance to go outside of park boundaries                          |
| getNHD()            | National Hydrography Dataset (NHD)                                                                                                                                                                 | Shapefiles               | Download flowlines and waterbodies within park boundaries.                                                                                               | Park boundaries, distance to go outside of park boundaries                          |
| getBuildings()      | NPS-ArcGIS                                                                                                                                                                                         | Shapefiles               | Download buildings within park boundaries.                                                                                                               | Park boundaries                                                                     |
| pullUSGS()          | USGS-NWIS                                                                                                                                                                                          | Table (with coordinates) | Inventory of available USGS data. Includes information about type (e.g., instantaneous, continuous); system (e.g., surface, groundwater); and parameter. | Park boundaries, distance to go outside of park boundaries                          |
| downloadFlowUSGS()  | USGS-NWIS                                                                                                                                                                                          | Table (with coordinates) | Download all flow-specific data from USGS.                                                                                                               | Park boundaries, distance to go outside of park boundaries, time frame for download |
| downloadAquarius()  | NPS-Aquarius                                                                                                                                                                                       | Table (with coordinates) | Download all Aquarius data associated with park unit(s), then munge into one, tidied data frame.                                                         | Park unit code(s)                                                                   |
| downloadWQP()       | US Water Quality Portal (WQP)                                                                                                                                                                      | Table (with coordinates) | Download all WQP data associated with park unit(s).                                                                                                      | Park boundaries, distance to go outside of park boundaries                          |
| getNOAA()           |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
| getSNOTEL()         |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
| pullDataStore()     | NPS-IRMA                                                                                                                                                                                           | Table                    | Inventory of water rights dockets and geospatial data from NPS-IRMA                                                                                      |                                                                                     |
| downloadDataStore() | NPS-IRMA                                                                                                                                                                                           |                          | Downloads water rights dockets and geospatial data from NPS-IRMA                                                                                         |                                                                                     |
| geteWRIMS()         | [California Electronic Water Rights Information System](https://www.waterboards.ca.gov/waterrights/water_issues/programs/ewrims/)[^1]                                                              | Table (with coordinates) | Downloads water rights point of diversions associated with park unit(s).                                                                                 | Park boundaries, distance to go outside of park boundaries                          |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |
|                     |                                                                                                                                                                                                    |                          |                                                                                                                                                          |                                                                                     |

[^1]: California-specific.

Here we demonstrate the functionality of our workflow across three national parks: Death Valley, Mojahave Desert, and Joshua Tree.

# Death Valley National Park (DEVA)

```{r}
library(tidyverse)
library(mapview)
library(lubridate)


mapviewOptions(basemaps.color.shuffle=FALSE,basemaps=c('CartoDB.Positron', 'CartoDB.DarkMatter', 'OpenStreetMap', 'Esri.WorldImagery', 'OpenTopoMap'))

plyr::ldply(list.files(path="src/",
                       pattern="*.R",
                       full.names=TRUE),
            source)

park <- c("DEVA")

dist <- 0.2

# Load in all "background" inventory data

aoi <- getParkBoundary(park=park)

omernik <- downloadOmernik(aoi = aoi)

aquifer <- downloadAquifers(aoi = aoi, dist = dist)

recharge <- downloadRecharge(aoi = aoi, dist = dist)

nhd <- getNHD(aoi = aoi, dist = dist)
flowlines <- nhd$flowlines
waterbodies <- nhd$waterbodies
```

**Park basics**

Death Valley National Park (DEVA) was established in \_\_ and is located in the `r if(n_distinct(omernik$NA_L3NAME)==1){print(unique(omernik$NA_L3NAME))} else {print(paste0(unique(omernik$NA_L3NAME), collapse=" and "), quote=FALSE)}` level three ecregion`r if(n_distinct(omernik$NA_L3NAME)>1){print('s')}` (Omernik & Griffith, 2014) of \_\_\_ and \_\_. Since \_\_, visitor use has \_\_ at a rate of \_\_, with the highest attendance recorded as \_\_ in \_\_. There are approximately \_\_ designated areas within \_\_ miles of the park, with \_\_ being the largest with a population of \_\_.

# NWIS

**An inventory of available data from the US Geological Survey (USGS)'s National Water Information System.**

```{r}
nwis_inventory <- pullFlowUSGS(aoi = aoi, dist = dist) 

current_nwis <- nwis_inventory %>%
  mutate(threshold=ifelse(lubridate::year(end_date) >= (lubridate::year(Sys.Date())-5), "Current", "Old")) %>%
  mutate(parameter_type=paste0(parameter, " (", data_type, ", ", site_type, ")"),
         date_range=ifelse(lubridate::year(begin_date)==lubridate::year(end_date), lubridate::year(end_date), paste0(year(begin_date),"-",year(end_date)))) %>%
mutate(flow_data=ifelse(grepl("discharge|flow|height|level|width",parameter_type,ignore.case=T)&!grepl("sediment",parameter_type,ignore.case=T), "Flow", "Other")) %>%
  select(site_no,site_name,parameter_type,date_range,n_obs,within_park,threshold,flow_data)
```

There are `r as.numeric(current_nwis %>% filter(within_park == "Within", threshold=="Current") %>% distinct(site_no) %>% n_distinct())` USGS gages that have collected data since `r lubridate::year(Sys.Date())-5` within `r park` 's park boundary. There are an additional `as.numeric(current_nwis %>% filter(within_park=="Outside", threshold=="Current") %>% distinct(site_no) %>% n_distinct())` monitoring locations when one extends outside of the park (by `r dist` decimal degrees, approximately `dist*11.1` km).

```{r}
  mapview(filter(current_nwis, threshold == "Current"), zcol='flow_data', layer.name = 'Current Data') + 
  mapview(filter(current_nwis, threshold == "Old"), zcol='flow_data', cex=3, alpha = 1, layer.name = 'Older NWIS Locations') +
  mapview(aoi,col.regions="#009E73",alpha = 1, legend = F)
```

## Current Flow Data

```{r}
current_nwis %>%
  filter(flow_data=="Flow",
         threshold=="Current") %>%
  sf::st_drop_geometry() %>%
  arrange(desc(site_name)) %>%
  kableExtra::kable('html') %>%
  kableExtra::kable_styling(position='center') %>%
  kableExtra::scroll_box(width='900px',height='500px')
```

# Aquarius

```{r}
#aquarius <- downloadAquarius(park="DEVA") 
aquarius <- read_csv('data/quarto/aquarius.csv')

aquarius_inventory <- aquarius %>%
  mutate(timestamp = ymd_hms(timestamp),
         year = year(timestamp)) %>%
  group_by(siteID, Location.Type, parameter, Long, Lat, EPSG) %>%
  summarize(n_obs = n(),
            threshold = ifelse(max(year) >= (lubridate::year(Sys.Date())-5), "Current", "Old"),
            range = ifelse(min(year) == max(year), paste0(min(year)), paste0(min(year), "-", max(year)))) %>%
  mutate(flow_data=ifelse(grepl("velocity|WaterPressure|discharge|flow|height|level|stage|depthtowater",parameter,ignore.case=T)&!grepl("sediment",parameter,ignore.case=T), "Flow", "Other")) %>%
  sf::st_as_sf(coords=c("Lat","Long"), crs=4326)
```

There are `r aquarius_inventory %>% as_tibble() %>%  dplyr::filter(threshold == "Current") %>% distinct(siteID, .keep_all = FALSE) %>% n_distinct()` Aquarius monitoring locations that have collected data since `r lubridate::year(Sys.Date())-5` within `r park` 's park boundary. `r as.numeric(aquarius_inventory %>% as_tibble() %>% filter(threshold=="Current" & flow_data=="Flow") %>% distinct(siteID,.keep_all=F) %>% n_distinct())` of those sites monitor flow-related parameters.

```{r}
mapview(filter(aquarius_inventory, threshold == "Current"), zcol='flow_data', layer.name = 'Current Data') + 
  mapview(filter(aquarius_inventory, threshold == "Old"), zcol='flow_data', cex=3, alpha = 1, layer.name = 'Older Aquarius Locations') +
  mapview(aoi,col.regions="#009E73",alpha = 1, legend = F)

```

```{r}
aquarius_inventory %>%
  filter(flow_data=="Flow",
         threshold=="Current") %>%
  sf::st_drop_geometry() %>%
  arrange(desc(siteID)) %>%
  kableExtra::kable('html') %>%
  kableExtra::kable_styling(position='center') %>%
  kableExtra::scroll_box(width='900px',height='500px')
```

# WQP

```{r}
sites <- downloadWQPSites(aoi,dist)

data <- downloadWQPData(sites=sites) %>%
  rename(SiteID=MonitoringLocationIdentifier,
         date=ActivityStartDate,
         time=ActivityStartTime.Time,
         parameter=CharacteristicName,
         org=OrganizationFormalName,
         org_id=OrganizationIdentifier,
         value=ResultMeasureValue,
         original_units=ResultMeasure.MeasureUnitCode,
         sample_method=SampleCollectionMethod.MethodName,
         analytical_method=ResultAnalyticalMethod.MethodName,
         particle_size=ResultParticleSizeBasisText,
         media=ActivityMediaName,
         type=ActivityMediaSubdivisionName,
         sample_depth=ActivityDepthHeightMeasure.MeasureValue,
         sample_depth_unit=ActivityDepthHeightMeasure.MeasureUnitCode,
         fraction=ResultSampleFractionText,
         status=ResultStatusIdentifier)
```

We found `r`n
